from . import sh
import time


async def get_stat(name):

    current_lvl = 0
    current_score = 0
    max_score_on_level = 0

    wks = sh.worksheet_by_title("–õ–∏—Å—Ç6")
    names_col = wks.get_col(1)

    for i in range(len(names_col)):
        if name == names_col[i]:
            person_statistic = wks.get_row(i + 1, include_tailing_empty=False)

    lvl_sh = sh.worksheet_by_title("lvl")
    levels = lvl_sh.get_col(1, include_tailing_empty=False)

    found = int(person_statistic[2])
    for i in range(len(levels)):
        if found < int(levels[i]):
            current_lvl = i + 1
            current_score = (found % int(levels[i - 1])) * 7
            max_score_on_level = (int(levels[i]) - int(levels[i - 1])) * 7
            break

    person_statistic.append(str(current_lvl))
    person_statistic.append(str(current_score))
    person_statistic.append(str(max_score_on_level))

    return person_statistic


async def print_stat(person):

    stat = (
        "üìà–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        + "–ò–º—è: "
        + person.name
        + "\n–ö–æ–ª-–≤–æ: "
        + person.amount
        + "\n–ù–∞–π–¥–µ–Ω–æ: "
        + person.founded
        + "\n–û—Å—Ç–∞–ª–æ—Å—å: "
        + person.left
        + "\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    )

    return stat


async def print_lvl(person):

    bar = await get_progressBar(person.current_score, person.max_score_on_level)

    lvl = (
        "üèÜ–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å:\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        + "–£—Ä–æ–≤–µ–Ω—å: "
        + person.current_level
        + "\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞: "
        + person.current_score
        + "\n–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: "
        + str(int(person.max_score_on_level) - int(person.current_score))
        + "\n\n"
        + bar[0]
        + "\n"
        + bar[1]
        + "%"
        + "\n\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    )

    return lvl


async def get_progressBar(current_score, max_score_on_level):

    progressBar = ""

    procent = float(current_score) / float(max_score_on_level)
    part = round(15 * round(procent, 2))

    for i in range(15):
        if i < part:
            progressBar += "‚ñà"
        else:
            progressBar += "‚éØ"

    return [progressBar, str(round(procent * 100, 2))]


async def get_enemy(person):

    wks = sh.worksheet_by_title("–õ–∏—Å—Ç6")
    founded = wks.get_col(3, include_tailing_empty=False)

    founded.pop(0)
    founded = list(map(int, founded))

    min_f = -1
    max_f = -1

    founded_sort = sorted(founded)
    for i in range(len(founded_sort)):
        if founded_sort[i] == int(person.founded):

            if i != 0:
                min_f = founded_sort[i - 1]

            if i != len(founded_sort) - 1:
                max_f = founded_sort[i + 1]

    min_print = ""
    max_print = ""

    if min_f != -1:
        for i in range(len(founded)):
            if min_f == founded[i]:
                min_person = wks.get_row(i + 2, include_tailing_empty=False)

        min_print = (
            "–ë–ª–∏–∂–∞–π—à–∏–π —Å–µ—Ä—Ñ–µ—Ä —Å –º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª—é–¥–µ–π:\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            + "–ò–º—è: "
            + min_person[0]
            + "\n–ö–æ–ª-–≤–æ: "
            + min_person[1]
            + "\n–ù–∞–π–¥–µ–Ω–æ: "
            + min_person[2]
            + "\n–û—Å—Ç–∞–ª–æ—Å—å: "
            + min_person[3]
            + "\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        )

    if max_f != -1:
        for i in range(len(founded)):
            if max_f == founded[i]:
                max_person = wks.get_row(i + 2, include_tailing_empty=False)

        max_print = (
            "–ë–ª–∏–∂–∞–π—à–∏–π —Å–µ—Ä—Ñ–µ—Ä —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª—é–¥–µ–π:\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            + "–ò–º—è: "
            + max_person[0]
            + "\n–ö–æ–ª-–≤–æ: "
            + max_person[1]
            + "\n–ù–∞–π–¥–µ–Ω–æ: "
            + max_person[2]
            + "\n–û—Å—Ç–∞–ª–æ—Å—å: "
            + max_person[3]
            + "\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        )

    return [min_print, max_print]
